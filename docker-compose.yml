version: '3.8'

x-base-service: &base_service
  networks:
    - analytics

x-redis: &base_redis
  <<: *base_service
  image: redis:7.0-alpine
  container_name: redis
  restart: unless-stopped
  ports:
    - ${REDIS_PORT}:6379
  healthcheck:
    test: ["CMD", "redis-cli","ping"]
    interval: 30s
    timeout: 10s
    retries: 5

x-base-logstash: &base_logstash
  <<: *base_service
  build: backend/logstash
  container_name: logstash
  depends_on: 
    elasticsearch: 
      condition: service_healthy
  mem_limit: 2g
  environment:
    - LOGSTASH_JDBC_USERNAME=${LOGSTASH_USER}
    - LOGSTASH_JDBC_PASSWORD=${LOGSTASH_PASSWORD}
    - LOGSTASH_ELASTICSEARCH_HOST=${ES_PROTOCOL}://${LOGSTASH_USER}:${LOGSTASH_PASSWORD}@${ES_HOST}:${ES_PORT}
  volumes:
      - ./backend/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./backend/logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro
      - ./backend/logstash/config//pipelines/:/usr/share/logstash/config/pipelines/:ro
  expose:
    - ${LOGSTASH_PORT}


services:

  nginx:
    <<: *base_service
    image: nginx:1.23.1-alpine
    container_name: nginx
    env_file: .env
    profiles: 
      - analytics
    depends_on: 
      kibana:
        condition: service_healthy
    volumes:
      - ./backend/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./backend/nginx/configs:/etc/nginx/conf.d:ro
      - ./backend/nginx/static/errors:/var/www/errors/:ro
      - ./backend/nginx/static/log/access_log:/var/log/nginx/access.log:rw
      - ./backend/nginx/static/log/error_log:/var/log/nginx/error.log:rw
    ports:
      - ${KIBANA_PORT}:${KIBANA_PORT}

  redis:
    <<: *base_redis
    profiles:
      - analytics
    volumes:
      - redis-data:/data

  elasticsearch:
    <<: *base_service
    image: docker.io/elastic/elasticsearch:8.5.3
    container_name: elasticsearch
    env_file: .env
    profiles:
      - analytics
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_USERNAME=${ES_USER}
      - ELASTIC_PASSWORD=${ES_PASSWORD}
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data:rw
    expose:
      - ${ES_PORT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 2g
    healthcheck:
      test: curl ${ES_PROTOCOL}://${ES_USER}:${ES_PASSWORD}@${ES_HOST}:${ES_PORT} >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  es-initer:
    <<: *base_service
    build: ./backend/es_initer
    container_name: es-initer
    env_file: .env
    profiles: 
      - analytics
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./backend/es_initer/static/log.txt:/var/log/elasticsearch-initer/log.txt

  kibana:
    <<: *base_service
    image: docker.io/elastic/kibana:8.5.3
    container_name: kibana
    env_file: .env
    depends_on: 
      elasticsearch: 
        condition: service_healthy
    mem_limit: 2g
    profiles:
      - analytics
    volumes:
      - ./backend/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    environment:
      - ELASTICSEARCH_HOSTS=${ES_PROTOCOL}://${KIBANA_USER}:${KIBANA_PASSWORD}@${ES_HOST}:${ES_PORT}
      - ELASTICSEARCH_USERNAME=${KIBANA_USER}
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
    expose:
      - ${KIBANA_PORT}
    healthcheck:
      test: curl http://kibana:${KIBANA_PORT} >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  logstash01:
    <<: *base_logstash
    env_file: .env
    profiles:
      - analytics
    container_name: logstash01

  logstash02:
    <<: *base_logstash
    env_file: .env
    profiles:
      - analytics
    container_name: logstash02
    
  filebeat:
    <<: *base_service
    image: docker.io/elastic/filebeat:8.5.3
    container_name: filebeat
    env_file: .env
    entrypoint: "filebeat -e -strict.perms=false"
    volumes:
      - ./backend/filebeat/config/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./backend/nginx/static/log/access_log:/var/log/nginx/access.log
      - ./backend/nginx/static/log/error_log:/var/log/nginx/error.log
      - ./backend/es_initer/static/log.txt:/var/log/elasticsearch-initer/log.txt
    profiles: 
      - analytics
    depends_on:
      - logstash01
      - logstash02
      - nginx
      - es-initer

  # jaeger-all-in-one:
  #   <<: *base_service
  #   image: jaegertracing/all-in-one:1.37
  #   container_name: jaeger
  #   env_file: .env
  #   profiles: 
  #     - analytics
  #   ports:
  #     - ${JAEGER_UI_PORT}:16686
  #     - ${JAEGER_AGENT_PORT}:6381/udp


networks:
  analytics:
    driver: bridge
  

volumes:
  elasticsearch-data:
  redis-data: