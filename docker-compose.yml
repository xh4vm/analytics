version: '3.8'

x-base-service: &base_service
  networks:
    - feedbacks_net

x-base-profile-feedback: &base-profile-feedback
  profiles:
    - feedbacks

x-base-profile-feedback-dev: &base-profile-feedback-dev
  profiles:
    - feedbacks-dev

x-base-profile-mongo: &base-profile-mongo
  profiles:
    - mongo
  <<: *base_service

services:
  mongors1n1:
    container_name: mongors1n1
    image: mongo
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /tmp/mongo_cluster1/data1:/data/db
    <<: *base-profile-mongo

  mongors1n2:
    container_name: mongors1n2
    image: mongo
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /tmp/mongo_cluster1/data2:/data/db
    <<: *base-profile-mongo

  mongors1n3:
    container_name: mongors1n3
    image: mongo
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /tmp/mongo_cluster1/data3:/data/db
    <<: *base-profile-mongo

  mongors2n1:
    container_name: mongors2n1
    image: mongo
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /tmp/mongo_cluster1/data4:/data/db
    <<: *base-profile-mongo

  mongors2n2:
    container_name: mongors2n2
    image: mongo
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /tmp/mongo_cluster1/data5:/data/db
    <<: *base-profile-mongo

  mongors2n3:
    container_name: mongors2n3
    image: mongo
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /tmp/mongo_cluster1/data6:/data/db
    <<: *base-profile-mongo

  mongocfg1:
    container_name: mongocfg1
    image: mongo
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /tmp/mongo_cluster1/config1:/data/db
    <<: *base-profile-mongo

  mongocfg2:
    container_name: mongocfg2
    image: mongo
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /tmp/mongo_cluster1/config2:/data/db
    <<: *base-profile-mongo

  mongocfg3:
    container_name: mongocfg3
    image: mongo
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /tmp/mongo_cluster1/config3:/data/db
    <<: *base-profile-mongo

  mongos1:
    container_name: mongos1
    image: mongo
    hostname: mongos1
    depends_on:
      - mongocfg1
      - mongocfg2
      - mongocfg3
    command: mongos --configdb mongors1conf/mongocfg1:27017,mongocfg2:27017,mongocfg3:27017 --port 27017 --bind_ip_all
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    <<: *base-profile-mongo

  mongos2:
    container_name: mongos2
    image: mongo
    hostname: mongos2
    depends_on:
      - mongocfg1
      - mongocfg2
      - mongocfg3
    command: mongos --configdb mongors1conf/mongocfg1:27017,mongocfg2:27017,mongocfg3:27017 --port 27017 --bind_ip_all
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    <<: *base-profile-mongo

  redis:
    <<: *base_service
    image: redis:7.0-alpine
    container_name: redis
    hostname: redis-api
    restart: unless-stopped
    ports:
      - ${REDIS_PORT}:6379
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    profiles:
      - feedbacks
      - feedbacks-dev
    volumes:
      - feedback-redis-data:/data

  feedbacks-api:
    <<: *base_service
    build: ./backend/feedbacks
    container_name: feedbacks-api
    env_file: .env
    profiles:
      - feedbacks
    expose:
      - ${PROJECT_FEEDBACKS_API_PORT}
    healthcheck:
      test: curl --fail -H "X-Request-Id:123456" http://feedbacks-api:${PROJECT_FEEDBACKS_API_PORT} || exit 1
      interval: 3s
      timeout: 10s
      retries: 5
    depends_on:
      - redis

  nginx:
    <<: *base_service
    image: nginx:1.23.1-alpine
    container_name: nginx
    profiles:
      - feedbacks
    volumes:
      - ./backend/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./backend/nginx/configs/feedbacks.conf:/etc/nginx/conf.d/feedbacks.conf:ro
      - ./backend/nginx/static/errors:/var/www/errors/:ro
      - ./backend/nginx/static/log/access_log:/var/log/nginx/access.log:rw
      - ./backend/nginx/static/log/error_log:/var/log/nginx/error.log:rw
    depends_on:
      feedbacks-api:
        condition: service_healthy
    ports:
      - ${PROJECT_FEEDBACKS_API_PORT}:${PROJECT_FEEDBACKS_API_PORT}

networks:
  feedbacks_net:
    external: true

volumes:
  feedback-redis-data:
